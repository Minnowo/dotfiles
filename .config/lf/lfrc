
# using https://github.com/NikitaIvanovV/ctpv for preview
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# interpreter for shell commands
set shell bash

# Draw nice outlines
set drawbox true

set shellopts '-eu'

# leave some space at the top and the bottom of the screen
set scrolloff 20

# Use the `dim` attribute instead of underline for the cursor in the preview pane
set cursorpreviewfmt "\033[7;2m"

set ratio 0:3:3



map e $nvim "$f"
map m $mpv "$f"

# period to toggle showing hidden files
map . set hidden!

# use enter for shell commands
map <enter> shell

# show the result of execution of previous commands
map ` !true

# mkdir command. See wiki if you want it to select created dir
map a :push %mkdir<space>

# f5 to reload 
map <f-5> reload

# f2 for rename selected
map <f-2> push :rename<space>


map gm cd /mnt
map gd cd ~/Documents
map gD cd ~/Downloads





# define a custom 'rename' command without prompt for overwrite
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

# define a custom 'open' command that does nothing
# this makes it so that using the vim key to go right on a file doesn't open it
# which i personally find annoying 
cmd open ${{
}}

cmd delete ${{

  IFS="$(printf '\n\t')"; rm -i $fx 

}}

cmd delete_force ${{

  IFS="$(printf '\n\t')"; rm -if $fx 

}}

# define a command which runs `file` on the selected file
cmd file ${{
  clear  
  IFS="$(printf '\n\t')"; file $fx 
  echo ""
  echo "Press any key to continue..."
  read -n 1 -s

}}

# command to run 7zip archive on all selected files
cmd zip ${{
    set -f
    7z a $1 $fx
}}

